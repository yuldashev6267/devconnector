[{"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\index.js":"1","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\store.js":"2","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\App.jsx":"3","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\history.js":"4","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\Navigation.jsx":"6","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\ProtectedRouter.jsx":"7","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\FirstPage.jsx":"8","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\Signin.jsx":"9","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\Signup.jsx":"10","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\Dashboard.jsx":"11","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\CreateProfile.jsx":"12","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\reducers\\index.js":"13","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\actions\\index.js":"14","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\reducers\\registerUser.js":"15","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\reducers\\profileReducer.js":"16","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\dashboardAction.jsx":"17","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\registration\\FormField.jsx":"18","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\registration\\Registration.jsx":"19","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\spiner\\Spinner.jsx":"20","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\actions\\types.js":"21","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\Api\\axiosInstance.js":"22","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\AddEducation.jsx":"23","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\educationAndExpirence\\EducationAndExpirence.jsx":"24","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\AddExpirence.jsx":"25"},{"size":287,"mtime":1620049170807,"results":"26","hashOfConfig":"27"},{"size":321,"mtime":1613968006935,"results":"28","hashOfConfig":"27"},{"size":1678,"mtime":1621517200085,"results":"29","hashOfConfig":"27"},{"size":91,"mtime":1614164941309,"results":"30","hashOfConfig":"27"},{"size":323,"mtime":1619949768135,"results":"31","hashOfConfig":"27"},{"size":2517,"mtime":1619949916080,"results":"32","hashOfConfig":"27"},{"size":742,"mtime":1615547640228,"results":"33","hashOfConfig":"27"},{"size":1827,"mtime":1614424273908,"results":"34","hashOfConfig":"27"},{"size":1083,"mtime":1614854052398,"results":"35","hashOfConfig":"27"},{"size":1212,"mtime":1614168220692,"results":"36","hashOfConfig":"27"},{"size":1649,"mtime":1621518773712,"results":"37","hashOfConfig":"27"},{"size":9056,"mtime":1618571030080,"results":"38","hashOfConfig":"27"},{"size":242,"mtime":1617032134311,"results":"39","hashOfConfig":"27"},{"size":4807,"mtime":1621518356831,"results":"40","hashOfConfig":"27"},{"size":1799,"mtime":1619950145408,"results":"41","hashOfConfig":"27"},{"size":1321,"mtime":1621517258479,"results":"42","hashOfConfig":"27"},{"size":1083,"mtime":1621518725442,"results":"43","hashOfConfig":"27"},{"size":405,"mtime":1613479333537,"results":"44","hashOfConfig":"27"},{"size":3133,"mtime":1614942896299,"results":"45","hashOfConfig":"27"},{"size":189,"mtime":1614887005198,"results":"46","hashOfConfig":"27"},{"size":770,"mtime":1621513595060,"results":"47","hashOfConfig":"27"},{"size":308,"mtime":1619950378039,"results":"48","hashOfConfig":"27"},{"size":687,"mtime":1621510670835,"results":"49","hashOfConfig":"27"},{"size":5214,"mtime":1621512697606,"results":"50","hashOfConfig":"27"},{"size":602,"mtime":1621512612521,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1njhz1d",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\index.js",[],["110","111"],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\store.js",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\App.jsx",["112"],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\history.js",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\Navigation.jsx",["113","114"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Link,\r\n  CssBaseline,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { deleteMe } from \"../actions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \"@global\": {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyle: \"none\",\r\n  },\r\n  appbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst Logout = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Button\r\n        component={Link}\r\n        variant=\"button\"\r\n        onClick={props.deleteUser}\r\n        className={classes.link}\r\n      >\r\n        <ExitToAppIcon />\r\n        Log out\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Links = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        component={RouterLink}\r\n        to=\"/\"\r\n        color=\"white\"\r\n        variant=\"button\"\r\n        className={classes.link}\r\n      >\r\n        First Page\r\n      </Link>\r\n      <Link\r\n        component={RouterLink}\r\n        to=\"/signup\"\r\n        color=\"black\"\r\n        variant=\"button\"\r\n        className={classes.link}\r\n      >\r\n        Sign up\r\n      </Link>\r\n      <Link\r\n        component={RouterLink}\r\n        to=\"/signin\"\r\n        color=\"black\"\r\n        variant=\"button\"\r\n        className={classes.link}\r\n      >\r\n        Sign in\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Navigation = ({\r\n  registerMe: { isAuthenticate, isLoading },\r\n  deleteMe,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar className={classes.appbar}>\r\n        <Toolbar variant=\"dense\" className={classes.btn}>\r\n          <Typography variant=\"h6\" className={classes.toolbarTitle}>\r\n            {\"</>Devconnector\"}\r\n          </Typography>\r\n          {!isAuthenticate || !localStorage.token ? (\r\n            <Links />\r\n          ) : (\r\n            <Logout deleteUser={deleteMe} />\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    registerMe: state.registerMe,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { deleteMe })(Navigation);\r\n","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\ProtectedRouter.jsx",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\FirstPage.jsx",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\Signin.jsx",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\Signup.jsx",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\Dashboard.jsx",["115","116"],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\CreateProfile.jsx",["117","118","119","120","121","122","123"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Typography,\r\n  FormControl,\r\n  FormGroup,\r\n  InputLabel,\r\n  NativeSelect,\r\n  FormHelperTextHel,\r\n  FormHelperText,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Modal,\r\n  Backdrop,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { createProfile, myAccount } from \"../actions\";\r\nimport clsx from \"clsx\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"4rem 0 0.5rem 2rem\",\r\n    \"& .MuiFormHelperText-root\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  person: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: \"0.5rem\",\r\n  },\r\n  select: {\r\n    maxWidth: \"80%\",\r\n    marginBottom: \"2rem\",\r\n  },\r\n  divBtn: {\r\n    display: \"block\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"block\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modalWidth: {\r\n    maxWidth: 300,\r\n  },\r\n  textFieldRoot: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      marginBottom: \"1rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CreateProfile = (props) => {\r\n  useEffect(() => {\r\n    props.myAccount();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const { control, handleSubmit } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    props.createProfile(data);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" style={{ color: \"#32DE8A\" }}>\r\n        Create Your Profile\r\n      </Typography>\r\n      <div className={classes.person}>\r\n        <PersonIcon />\r\n        <Typography variant=\"h6\">\r\n          Let's get some information to make your profile stand out\r\n        </Typography>\r\n      </div>\r\n      <FormGroup className={classes.select} onSubmit={handleSubmit(onSubmit)}>\r\n        <InputLabel htmlFor=\"status-native-helper\">\r\n          Select Professional status\r\n        </InputLabel>\r\n        <Controller\r\n          as={NativeSelect}\r\n          name=\"status\"\r\n          defaultValue=\"\"\r\n          control={control}\r\n          variant=\"outlined\"\r\n          id=\"status-native-helper\"\r\n        >\r\n          <option value=\"0\"></option>\r\n          <option value=\"Developer\">Developer</option>\r\n          <option value=\"Junior Web Developer\">Junior Web Developer</option>\r\n          <option value=\"Middle Web Developer\">Middle Web Developer</option>\r\n          <option value=\"Senior Web Developer\">Senior Web Developer</option>\r\n          <option value=\"Desktop App Developer\">Desktop App Developer</option>\r\n          <option value=\"Manager\">Manager</option>\r\n          <option value=\"Student or Learning\">Student or Learning</option>\r\n          <option value=\"Intern\">Intern</option>\r\n          <option value=\"Instructor or Teacher\">Instructor or Teacher</option>\r\n          <option value=\"Other\">Other</option>\r\n        </Controller>\r\n        <FormHelperText filled>\r\n          Give us an idea of where you are at in your career\r\n        </FormHelperText>\r\n        <Controller\r\n          as={TextField}\r\n          control={control}\r\n          defaultValue=\"\"\r\n          name=\"company\"\r\n          label=\"Company\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n        <FormHelperText>Could be your own or one you work for</FormHelperText>\r\n        <Controller\r\n          as={TextField}\r\n          control={control}\r\n          defaultValue=\"\"\r\n          name=\"website\"\r\n          label=\"Website\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n        <FormHelperText>Could be your own or a company website</FormHelperText>\r\n        <Controller\r\n          as={TextField}\r\n          control={control}\r\n          defaultValue=\"\"\r\n          name=\"location\"\r\n          label=\"Location\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n        <FormHelperText>City & state suggested (Eg Boston,MA)</FormHelperText>\r\n        <Controller\r\n          as={TextField}\r\n          control={control}\r\n          defaultValue=\"\"\r\n          name=\"skills\"\r\n          label=\"*Skills\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n        <FormHelperText>\r\n          Please use comma separated values (eg HTML,CSS,JavaScript,Python)\r\n        </FormHelperText>\r\n        <Controller\r\n          as={TextareaAutosize}\r\n          control={control}\r\n          name=\"description\"\r\n          defaultValue=\"\"\r\n          aria-label=\"minimum height\"\r\n          rowsMin={3}\r\n          placeholder=\"A short bio of yourself\"\r\n          style={{ resize: \"none\" }}\r\n        />\r\n        <FormHelperText>Tell us a little about yourself</FormHelperText>\r\n        <div className={classes.divBtn}>\r\n          <Button\r\n            display=\"inline\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={handleOpen}\r\n          >\r\n            Add social Network links\r\n          </Button>\r\n          <Typography\r\n            variant=\"button\"\r\n            display=\"inline\"\r\n            style={{ marginLeft: \"0.5rem\" }}\r\n          >\r\n            <em>optional</em>\r\n          </Typography>\r\n          <Modal\r\n            name=\"modal\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            keepMounted\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={open} size=\"small\">\r\n              <div\r\n                className={clsx(\r\n                  classes.paper,\r\n                  classes.textFieldRoot,\r\n                  classes.modalWidth\r\n                )}\r\n              >\r\n                <TwitterIcon style={{ color: \"blue\" }} />\r\n\r\n                <Controller\r\n                  as={TextField}\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  name=\"twitter\"\r\n                  label=\"Twitter URL\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  autoComplete\r\n                  fullWidth\r\n                />\r\n                <Controller\r\n                  as={TextField}\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  name=\"facebook\"\r\n                  label=\"Facebook URL\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  autoComplete\r\n                  fullWidth\r\n                />\r\n                <Controller\r\n                  as={TextField}\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  name=\"youtube\"\r\n                  label=\"Youtube URL\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  autoComplete\r\n                  fullWidth\r\n                />\r\n                <Controller\r\n                  as={TextField}\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  name=\"linkedin\"\r\n                  label=\"Linkedin URL\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  autoComplete\r\n                  fullWidth\r\n                />\r\n                <Controller\r\n                  as={TextField}\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  name=\"telegram\"\r\n                  label=\"Telegram URL\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  autoComplete\r\n                  fullWidth\r\n                />\r\n                <Controller\r\n                  as={TextField}\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  name=\"instagram\"\r\n                  label=\"Instagram URL\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  autoComplete\r\n                  fullWidth\r\n                />\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        <br />\r\n        <Button type=\"submit\" onClick={handleSubmit(onSubmit)}>\r\n          Submit\r\n        </Button>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { profile: state.userProfile };\r\n};\r\nexport default connect(mapStateToProps, { createProfile, myAccount })(\r\n  CreateProfile\r\n);\r\n","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\reducers\\index.js",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\actions\\index.js",["124"],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\reducers\\registerUser.js",["125"],"/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable default-case */\r\nimport {\r\n  SIGN_UP,\r\n  SIGN_UP_FAIL,\r\n  LOG_IN,\r\n  LOG_IN_FAIL,\r\n  MY_ACCOUNT,\r\n  MY_ACCOUNT_FAIL,\r\n  LOG_OUT,\r\n  LOG_OUT_FAIL,\r\n} from \"../actions/types\";\r\nconst INTIAL_VALUES = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticate: false,\r\n  isLoading: true,\r\n  isError: false,\r\n  user: null,\r\n};\r\n\r\nexport default (state = INTIAL_VALUES, action) => {\r\n  switch (action.type) {\r\n    case SIGN_UP:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        token: localStorage.getItem(\"token\"),\r\n        isAuthenticate: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case LOG_IN:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        token: localStorage.getItem(\"token\"),\r\n        isAuthenticate: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case MY_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        isAuthenticate: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case LOG_OUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        token: null,\r\n        isAuthenticate: false,\r\n      };\r\n    case SIGN_UP_FAIL:\r\n    case LOG_IN_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticate: false,\r\n        isLoading: false,\r\n        isError: action.payload,\r\n      };\r\n    case MY_ACCOUNT_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticate: false,\r\n        isLoading: false,\r\n        isError: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\reducers\\profileReducer.js",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\dashboardAction.jsx",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\registration\\FormField.jsx",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\registration\\Registration.jsx",["126"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  Container,\r\n  CssBaseline,\r\n  Typography,\r\n  Avatar,\r\n  Button,\r\n  LinearProgress,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n// import FormField from \"./FormField\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 2),\r\n  },\r\n}));\r\nconst Registration = (props) => {\r\n  const classes = useStyles();\r\n  // if (props.registerMe.isAuthenticate) {\r\n  //   return <Redirect to=\"/dashboard\" />;\r\n  // }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{props.text}</Typography>\r\n        <Formik\r\n          initialValues={props.values}\r\n          validationSchema={props.errorValidation}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              setSubmitting(false);\r\n              props.registerUser(values);\r\n            }, 500);\r\n          }}\r\n        >\r\n          {({ submitForm, isSubmitting }) => (\r\n            <Form className={classes.form}>\r\n              {props.children}\r\n              {isSubmitting && <LinearProgress />}\r\n              <Button\r\n                className={classes.submit}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isSubmitting}\r\n                onClick={submitForm}\r\n                spacing={1}\r\n                fullWidth\r\n              >\r\n                {props.formType}\r\n              </Button>\r\n\r\n              {props.registerMe.isError ? (\r\n                <Alert severity=\"error\">\r\n                  {props.registerMe.isError.message}\r\n                </Alert>\r\n              ) : null}\r\n\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {props.passType}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to={props.location} variant=\"body2\">\r\n                    {props.locationText}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { registerMe: state.registerMe };\r\n};\r\nexport default connect(mapStateToProps)(Registration);\r\n","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\spiner\\Spinner.jsx",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\actions\\types.js",[],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\Api\\axiosInstance.js",[],["127","128"],"C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\AddEducation.jsx",["129","130"],"import React from \"react\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport EducationAndExpirence from \"../components/educationAndExpirence/EducationAndExpirence\";\r\n\r\nconst AddEducation = (props) => {\r\n  return (\r\n    <EducationAndExpirence\r\n      textTitle=\"Add An Education\"\r\n      textBody=\"Add any school or bootcamp that you have attend\"\r\n      type=\"Education\"\r\n      name1=\"school\"\r\n      name2=\"degree\"\r\n      name3=\"fieldofstudy\"\r\n      name4=\"description\"\r\n      text1=\"School or Bootcamp\"\r\n      text2=\"*Degree or certificate\"\r\n      text3=\"Field Of Study\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddEducation;\r\n","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\components\\educationAndExpirence\\EducationAndExpirence.jsx",["131"],"/* eslint-disable react/jsx-no-duplicate-props */\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createEducation, createExpirence } from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextareaAutosize,\r\n  Button,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(12),\r\n  },\r\n  body: {\r\n    marginBottom: \"2rem\",\r\n  },\r\n  select: {\r\n    marginBottom: \"2rem\",\r\n    \"& .MuiInputBase-root\": {\r\n      marginBottom: \"10px\",\r\n    },\r\n  },\r\n  btn: {\r\n    display: \"block\",\r\n    width: \"80px\",\r\n  },\r\n}));\r\nconst EducationAndExpirence = (props) => {\r\n  const classes = useStyles();\r\n  const { handleSubmit, control, register } = useForm();\r\n\r\n  const [selectedDate, setDate] = useState(moment());\r\n  const [inputValue, setInputValue] = useState(moment().format(\"YYYY-MM-DD\"));\r\n  const onDateChange = (date, value) => {\r\n    setDate(date);\r\n    setInputValue(value);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    if (props.type === \"Education\") {\r\n      console.log(\"1\");\r\n      return props.createEducation(data);\r\n    } else if (props.type === \"Expirence\") {\r\n      console.log(\"2\");\r\n      return props.createExpirence(data);\r\n    }\r\n  };\r\n  const dateFormatter = (str) => {\r\n    return str;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.body}>\r\n        <Typography variant=\"h3\">{props.textTitle}</Typography>\r\n        <Typography variant=\"body\" className={classes.bodyTypo}>\r\n          {props.textBody}\r\n        </Typography>\r\n      </div>\r\n      <FormGroup className={classes.select} onSubmit={handleSubmit(onSubmit)}>\r\n        <Controller\r\n          as={TextField}\r\n          defaultValue=\"\"\r\n          name={props.name1}\r\n          id=\"outlined-basic\"\r\n          label={props.text1}\r\n          control={control}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n        />\r\n        <Controller\r\n          as={TextField}\r\n          defaultValue=\"\"\r\n          id=\"outlined-basic\"\r\n          name={props.name2}\r\n          label={props.text2}\r\n          control={control}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n        />\r\n        <Controller\r\n          as={TextField}\r\n          defaultValue=\"\"\r\n          name={props.name3}\r\n          id=\"outlined-basic\"\r\n          control={control}\r\n          label={props.text3}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n        />\r\n        <Typography variant=\"p\">From Date</Typography>\r\n        <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n          <Controller\r\n            as={KeyboardDatePicker}\r\n            defaultValue=\"\"\r\n            control={control}\r\n            name=\"from\"\r\n            autoOk={true}\r\n            showTodayButton={true}\r\n            value={selectedDate}\r\n            format=\"YYYY-MM-DD\"\r\n            inputValue={inputValue}\r\n            onChange={onDateChange}\r\n            rifmFormatter={dateFormatter}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch inputRef={register} name=\"current\" color=\"primary\" />\r\n          }\r\n          label=\"Current Job\"\r\n        />\r\n\r\n        <Typography variant=\"p\">To Date</Typography>\r\n        <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n          <Controller\r\n            as={KeyboardDatePicker}\r\n            defaultValue=\"\"\r\n            control={control}\r\n            name=\"to\"\r\n            autoOk={true}\r\n            showTodayButton={true}\r\n            value={selectedDate}\r\n            format=\"YYYY-MM-DD\"\r\n            inputValue={inputValue}\r\n            onChange={onDateChange}\r\n            rifmFormatter={dateFormatter}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        <Controller\r\n          as={TextareaAutosize}\r\n          defaultValue=\"\"\r\n          name={props.name4}\r\n          aria-label=\"minimum height\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          rowsMin={5}\r\n          placeholder={props.placeHolder}\r\n          style={{ resize: \"none\" }}\r\n        />\r\n        <div style={{ display: \"flex\", marginTop: \"8px\" }}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Link\r\n            color=\"default\"\r\n            component={Button}\r\n            to=\"/dashboard\"\r\n            variant=\"contained\"\r\n            style={{ marginLeft: \"4px\" }}\r\n          >\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createEducation, createExpirence })(\r\n  EducationAndExpirence\r\n);\r\n","C:\\Users\\Admin\\desktop\\projects\\backend\\client\\src\\pages\\AddExpirence.jsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":6,"column":21,"nodeType":"138","messageId":"139","endLine":6,"endColumn":30},{"ruleId":"136","severity":1,"message":"140","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"141","line":15,"column":8,"nodeType":"138","messageId":"139","endLine":15,"endColumn":12},{"ruleId":"136","severity":1,"message":"142","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":18,"column":6,"nodeType":"145","endLine":18,"endColumn":8,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"147","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":14},{"ruleId":"136","severity":1,"message":"148","line":9,"column":3,"nodeType":"138","messageId":"139","endLine":9,"endColumn":20},{"ruleId":"136","severity":1,"message":"149","line":22,"column":8,"nodeType":"138","messageId":"139","endLine":22,"endColumn":20},{"ruleId":"136","severity":1,"message":"150","line":23,"column":8,"nodeType":"138","messageId":"139","endLine":23,"endColumn":20},{"ruleId":"136","severity":1,"message":"151","line":24,"column":8,"nodeType":"138","messageId":"139","endLine":24,"endColumn":19},{"ruleId":"136","severity":1,"message":"152","line":25,"column":8,"nodeType":"138","messageId":"139","endLine":25,"endColumn":20},{"ruleId":"143","severity":1,"message":"153","line":74,"column":6,"nodeType":"145","endLine":74,"endColumn":8,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"155","line":97,"column":11,"nodeType":"138","messageId":"139","endLine":97,"endColumn":19},{"ruleId":"136","severity":1,"message":"156","line":11,"column":3,"nodeType":"138","messageId":"139","endLine":11,"endColumn":15},{"ruleId":"136","severity":1,"message":"157","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":18},{"ruleId":"132","replacedBy":"158"},{"ruleId":"134","replacedBy":"159"},{"ruleId":"136","severity":1,"message":"160","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":20},{"ruleId":"136","severity":1,"message":"161","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"162","line":13,"column":3,"nodeType":"138","messageId":"139","endLine":13,"endColumn":11},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'myProfile' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'clsx' is defined but never used.","'userLogin' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'myAccount' and 'myProfile'. Either include them or remove the dependency array. If 'myAccount' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["165"],"'FormControl' is defined but never used.","'FormHelperTextHel' is defined but never used.","'TelegramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'YouTubeIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["166"],"'response' is assigned a value but never used.","'LOG_OUT_FAIL' is defined but never used.","'Redirect' is defined but never used.",["163"],["164"],"'Typography' is defined but never used.","'makeStyles' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [myAccount, myProfile]",{"range":"171","text":"172"},"Update the dependencies array to be: [props]",{"range":"173","text":"174"},[592,594],"[myAccount, myProfile]",[1798,1800],"[props]"]